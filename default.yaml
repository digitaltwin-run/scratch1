# Default Docker Compose configuration with multiple services
version: "3.8"

services:
  # Web application service
  web:
    image: nginx:latest
    container_name: web-server
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ENV=production
      - DEBUG=false
    volumes:
      - ./web:/usr/share/nginx/html
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - frontend
      - backend
    depends_on:
      - api
    restart: unless-stopped

  # API service
  api:
    image: node:16-alpine
    container_name: api-server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=database
      - DB_PORT=5432
    volumes:
      - ./api:/app
    working_dir: /app
    command: npm start
    networks:
      - backend
    depends_on:
      - database
    restart: unless-stopped

  # Database service
  database:
    image: postgres:13
    container_name: postgres-db
    environment:
      - POSTGRES_DB=myapp
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

  # Redis cache service
  cache:
    image: redis:6-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - cache_data:/data
    networks:
      - backend
    restart: unless-stopped

# Define custom networks
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

# Define named volumes
volumes:
  db_data:
    driver: local
  cache_data:
    driver: local